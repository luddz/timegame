{"version":3,"sources":["About/ludvig-kindberg-bw.png","Assets/DemoScreenShot.png","Assets/shortened.mp4","About/about.js","Homepage/homepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","Image","src","ludde","height","roundedCircle","Component","Homepage","helloWorld","rounded","fluid","width","controls","shortVideo","type","App","Navbar","bg","variant","fixed","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","exact","path","withRouter","Boolean","window","location","hostname","match","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,gD,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mTC2D5BC,E,iLAlDX,OACE,yBAAKC,UAAU,oBACb,wCACA,yBAAKA,UAAU,WACb,6BACE,kBAACC,EAAA,EAAD,CAAOD,UAAU,cAAcE,IAAKC,IAAOC,OAAO,QAAQC,eAAa,IACvE,uBAAGL,UAAU,SAAQ,+CACrB,4BACE,2CACA,4CAEF,2BAAG,oDACH,qFAEF,6BACE,kBAACC,EAAA,EAAD,CAAOD,UAAU,cAAcE,IAAKC,IAAOC,OAAO,QAAQC,eAAa,IACvE,uBAAGL,UAAU,SAAQ,0CACrB,4BACE,2CACA,4CAEF,2BAAG,oDACH,sFAEF,6BACE,kBAACC,EAAA,EAAD,CAAOD,UAAU,cAAcE,IAAKC,IAAOC,OAAO,QAAQC,eAAa,IACvE,uBAAGL,UAAU,SAAQ,2CACrB,4BACE,2CACA,4CAEF,2BAAG,oDACH,wEAEF,6BACE,kBAACC,EAAA,EAAD,CAAOD,UAAU,cAAcE,IAAKC,IAAOC,OAAO,QAAQC,eAAa,IACvE,uBAAGL,UAAU,SAAQ,2CACrB,4BACE,2CACA,4CAEF,2BAAG,oDACH,mF,GA5CQM,a,0CCgCLC,E,iLA9BX,OACE,yBAAKP,UAAU,OACb,4BAAQA,UAAU,cAChB,gDAIF,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,iBACb,8CACA,uUAGA,kBAACC,EAAA,EAAD,CAAOD,UAAU,cAAcE,IAAKM,IAAYC,SAAO,EAACC,OAAK,KAE/D,yBAAKV,UAAU,0BACb,kDACA,yBAAKA,UAAU,SACb,2BAAOW,MAAM,MAAMP,OAAO,MAAMQ,UAAQ,GACtC,4BAAQV,IAAKW,IAAYC,KAAK,cADhC,wD,GApBSR,a,gBCQjBS,E,iLAEF,OACE,yBAAKf,UAAU,OACb,kBAACgB,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,MAAM,OACnC,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,KAAnB,mBACA,kBAACL,EAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,kBAACP,EAAA,EAAOQ,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAK1B,UAAU,WACb,kBAAC0B,EAAA,EAAIC,KAAL,CAAUN,KAAK,MAAf,QACA,kBAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,WAAf,eAIR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAChB,kBAAC,EAAD,a,GAnBMvB,aA2BHwB,cAAWf,GC9BNgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVN,IAAMC,EACF,kBAAC,IAAD,CAASC,SAAU,KACjB,kBAAC,EAAD,OAINC,IAASC,OAAOH,EAAKI,SAASC,eAAe,SDmHvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.02ff373d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ludvig-kindberg-bw.bf779840.png\";","module.exports = __webpack_public_path__ + \"static/media/DemoScreenShot.b85267ec.png\";","module.exports = __webpack_public_path__ + \"static/media/shortened.e2788385.mp4\";","import React, { Component } from 'react';\nimport ludde from './ludvig-kindberg-bw.png';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './about.css'\nimport Image from 'react-bootstrap/Image'\n// import '../App.css'\n\nclass About extends Component {\n  render(){\n    return (\n      <div className=\"aboutUsContainer\">\n        <h1>About us</h1>\n        <div className=\"theTeam\">\n          <div>\n            <Image className=\"imageCenter\" src={ludde} height=\"200px\" roundedCircle />\n            <p className=\"names\"><b>Ludvig Kindberg</b></p>\n            <ul>\n              <li>Placeholder</li>\n              <li>Placeholder</li>\n            </ul>\n            <p><b>What I have learned:</b></p>\n            <p>Placeholder text, Placeholder Placeholder placeholder</p>\n          </div>\n          <div>\n            <Image className=\"imageCenter\" src={ludde} height=\"200px\" roundedCircle />\n            <p className=\"names\"><b>Tom Axblad</b></p>\n            <ul>\n              <li>Placeholder</li>\n              <li>placeholder</li>\n            </ul>\n            <p><b>What I have learned:</b></p>\n            <p>Placeholder text, Placeholder Placeholder placeholder </p>\n          </div>\n          <div>\n            <Image className=\"imageCenter\" src={ludde} height=\"200px\" roundedCircle />\n            <p className=\"names\"><b>Nathan Bhat</b></p>\n            <ul>\n              <li>Placeholder</li>\n              <li>Placeholder</li>\n            </ul>\n            <p><b>What I have learned:</b></p>\n            <p>Placeholder text placeholder placeholder</p>\n          </div>\n          <div>\n            <Image className=\"imageCenter\" src={ludde} height=\"200px\" roundedCircle />\n            <p className=\"names\"><b>Alvin Hager</b></p>\n            <ul>\n              <li>Placeholder</li>\n              <li>Placeholder</li>\n            </ul>\n            <p><b>What I have learned:</b></p>\n            <p>Placeholder text placeholder text placeholder</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './homepage.css'\nimport Image from 'react-bootstrap/Image'\nimport helloWorld from '../Assets/DemoScreenShot.png'\nimport shortVideo from '../Assets/shortened.mp4'\n\nclass Homepage extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>\n            Asters Planetai\n          </h1>\n        </header>\n        <div className=\"App-content-container\">\n          <div className=\"About-content\">\n            <h2>About Timegame</h2>\n            <div>\n              The game is a 2D puzzle platformer in which the player controls a humanoid character in an open-world setting. The gameplay is centered around the use of a time mechanic that allows the character to interact with past versions of itself to solve puzzles in a creative, non-deterministic manner.\n            </div>\n            <Image className=\"imageCenter\" src={helloWorld} rounded fluid/>\n          </div>\n          <div className=\"videoTutorialContainer\">\n            <h2>A short video demo</h2>\n            <div className=\"video\">\n              <video width=\"640\" height=\"480\" controls>\n                <source src={shortVideo} type=\"video/mp4\"/>\n                Your browser does not support the video tag.\n              </video>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Homepage\n","import React, { Component } from 'react';\nimport { withRouter, Switch, Route} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport About from './About/about'\nimport Homepage from './Homepage/homepage'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\n\n// <header className=\"app-header\" fixed=\"top\">\n//\n//   <NavLink className=\"navBtn\" to=\"/\"><button className=\"navBtn\">Home</button></NavLink>\n//   <NavLink className=\"navBtn\" to=\"/about\"><button className=\"navBtn\">About</button></NavLink>\n// </header>\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n            <Navbar.Brand href=\"#\">Asters Planetai</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"#/\">Home</Nav.Link>\n                <Nav.Link href=\"#/about\">The team</Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n        <Switch>\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst app = (\n    <Router  basename={\"/\"}>\n      <App />\n    </Router>\n  );\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}